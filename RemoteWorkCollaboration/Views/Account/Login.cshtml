@model RemoteWorkCollaboration.Models.LoginViewModel

@{
    Layout = "_Layout"; // Reference to layout if applicable
}

<div class="container d-flex justify-content-center align-items-center" style="height: 100vh;">
    <div class="card shadow-sm" style="width: 400px; padding: 20px;">
        <h2 class="text-center mb-4">Login</h2>

        <form id="loginForm" onsubmit="return handleLogin(event)">
            <div class="form-group">
                <label for="Email">Email Address</label>
                <input asp-for="Email" class="form-control" id="Email" required placeholder="Enter your email" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label for="Password">Password</label>
                <input asp-for="Password" class="form-control" id="Password" type="password" required placeholder="Enter your password" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>

            <div class="form-group form-check">
                <input type="checkbox" class="form-check-input" asp-for="RememberMe" id="RememberMe" />
                <label class="form-check-label" for="RememberMe">Remember me</label>
            </div>

            <div class="d-flex justify-content-between align-items-center">
                <button type="submit" class="btn btn-primary btn-block">Login</button>

            </div>
            <div class="d-flex justify-content-between align-items-center">

                <a href="/Account/PasswordRecovery" class="text-decoration-none">Forgot Password?</a>
            </div>

            <div class="text-center mt-3">
                <p>Don't have an account? <a asp-action="Register" class="btn btn-link">Register here</a></p>
            </div>
        </form>
    </div>
</div>

<script>
    async function handleLogin(event) {
        event.preventDefault(); // Prevent default form submission

        const form = document.getElementById('loginForm');
        const formData = new FormData(form);

        const loginData = {
            Email: formData.get('Email'),
            Password: formData.get('Password'),
        };

        try {
            const response = await fetch('/api/userregistration/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(loginData),
            });

            if (response.ok) {
                const result = await response.json();
                showToast("success", result.message);
                window.location.href = result.redirectUrl; // Redirect to the dashboard
            } else {
                const errorResponse = await response.json();
                showToast("error", errorResponse.message || 'An error occurred during login.');
            }
        } catch (error) {
            console.error('Error during login:', error);
            showToast("error", 'An unexpected error occurred. Please try again.');
        }
    }
</script>
